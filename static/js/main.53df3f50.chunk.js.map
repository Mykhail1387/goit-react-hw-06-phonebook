{"version":3,"sources":["component/contactForm/ContactForm.module.css","component/transitions/ForWarnings.module.css","component/filter/filter.module.css","component/contactList/elementListContacts.module.css","containers/AppContainer/AppContainer.module.css","component/alreadyHaveContact/alreadyHaveContact.module.css","component/nothingEntered/nothingEntered.module.css","component/transitions/forContactList.module.css","component/transitions/forTitle.module.css","component/transitions/ForFilter.module.css","redux/contactAction.js","redux/reducers/contactReducer.js","redux/reducers/filterReducer.js","redux/reducers/index.js","redux/store.js","component/contactForm/contactForm.js","containers/contactFormContainer/ContactFormContainer.js","component/contactList/elementListContact.js","component/contactList/ContactList .js","containers/contactListContainer/ContactListContainer.js","component/filter/filter.js","containers/filterContainer/FilterContainer.js","component/alreadyHaveContact/AlreadyHaveContact.js","component/nothingEntered/NothingEntered.js","containers/AppContainer/AppContainer.js","index.js"],"names":["module","exports","Type","initilState","contacts","id","name","number","contactReducer","state","action","type","searchSameName","map","cont","includes","payload","length","shortId","generate","filter","contact","filterReducer","rootReducer","combineReducers","store","createStore","devToolsEnhancer","ContactForm","handleSubmit","handleChange","className","styles","form","onSubmit","spanText","value","onChange","autoComplete","input","minLength","btn","ContactFormContainer","e","target","setState","preventDefault","props","addContact","onAddContactForTransition","reset","this","Component","connect","dispatch","newContact","deleteContact","list","close","onClick","ContactList","filteredContacts","TransitionGroup","component","CSSTransition","key","timeout","unmountOnExit","classNames","forContactList","ContactListContainer","toLowerCase","filterContacts","Filter","onchangeFilter","wrap","text","FilterContainer","filterContact","AlreadyHaveContact","wrapper","NothingEntered","AppContainer","isOpen","isAlready","isNothing","takeContactWithFormForTransition","setTimeout","contactsLength","boolForFilter","in","forTitle","ForAlready","ForNothing","ForFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53df3f50.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Rra_\",\"spanText\":\"ContactForm_spanText__2lpgU\",\"btn\":\"ContactForm_btn__3XyQE\",\"input\":\"ContactForm_input__2olK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ForWarnings_enter__2aV5j\",\"enterActive\":\"ForWarnings_enterActive__3NSAz\",\"exit\":\"ForWarnings_exit__1kxhy\",\"exitActive\":\"ForWarnings_exitActive__2yNfP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"filter_wrap__9AJ3r\",\"text\":\"filter_text__217mo\",\"input\":\"filter_input__-_mRD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"elementListContacts_list__CUfdl\",\"close\":\"elementListContacts_close__U8OzM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AppContainer_wrapper__2AjpG\",\"text\":\"AppContainer_text__pNomi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"alreadyHaveContact_wrapper__1BSPz\",\"text\":\"alreadyHaveContact_text__f508l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"nothingEntered_wrapper__2yKe6\",\"text\":\"nothingEntered_text__TYeAc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"forContactList_enter__2_QkD\",\"enterActive\":\"forContactList_enterActive__1doTN\",\"exit\":\"forContactList_exit__Je1xf\",\"exitActive\":\"forContactList_exitActive__2WbSj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"forTitle_enter__1PNxc\",\"enterActive\":\"forTitle_enterActive__3X7it\",\"exit\":\"forTitle_exit__CDXCB\",\"exitActive\":\"forTitle_exitActive__3TDgb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ForFilter_enter__1Ewzr\",\"enterActive\":\"ForFilter_enterActive__2mTVk\",\"exit\":\"ForFilter_exit___4EVV\",\"exitActive\":\"ForFilter_exitActive__hF7t9\"};","export const Type = {\r\n    ADD_CONTACT: 'ADD_CONTACT',\r\n    DELETE_CONTACT: 'DELETE_CONTACT',\r\n    FILTER_CONTACT: 'FILTER_CONTACT',\r\n}\r\n\r\n\r\nexport const addContact = (newContact) => ({\r\n    type: Type.ADD_CONTACT,\r\n    payload: {\r\n        name: newContact.name,\r\n        number: newContact.number\r\n    }\r\n})\r\n\r\n\r\nexport const deleteContact = id => ({\r\n    type: Type.DELETE_CONTACT,\r\n    payload: { id }\r\n});\r\n\r\n\r\nexport const filterContact = filter => ({\r\n    type: Type.FILTER_CONTACT,\r\n    payload: filter\r\n})","import { Type } from '../contactAction';\r\nimport shortId from 'shortid';\r\n\r\nconst initilState = {\r\n    contacts: [\r\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ]\r\n}\r\n\r\nconst contactReducer = (state = initilState, action) => {\r\n\r\n    switch (action.type) {\r\n        case Type.ADD_CONTACT:\r\n            const searchSameName = state.contacts.map(cont => cont.name).includes(action.payload.name)\r\n            if (searchSameName) {\r\n                return state\r\n            } else if (action.payload.name.length === 0) {\r\n                return state\r\n            }\r\n\r\n            return {\r\n                contacts: [\r\n                    {\r\n                        id: shortId.generate(),\r\n                        ...action.payload\r\n                    },\r\n                    ...state.contacts\r\n                ]\r\n            };\r\n\r\n        case Type.DELETE_CONTACT:\r\n            return {\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload.id)\r\n\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default contactReducer;\r\n","import { Type } from '../contactAction';\r\n\r\nconst filterReducer = (state = '', action) => {\r\n    switch (action.type) {\r\n        case Type.FILTER_CONTACT:\r\n            return action.payload\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default filterReducer;","import { combineReducers } from 'redux';\r\n\r\nimport contactReducer from '../reducers/contactReducer';\r\nimport filterReducer from '../reducers/filterReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: contactReducer,\r\n    filter: filterReducer\r\n\r\n})\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from './reducers/index'\r\n\r\n\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(rootReducer, devToolsEnhancer())\r\n\r\nexport default store;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nconst ContactForm = ({ name, number, handleSubmit, handleChange }) => {\r\n\r\n    return (\r\n        <>\r\n            <form className={styles.form} onSubmit={handleSubmit}>\r\n                <span className={styles.spanText}>Name</span>\r\n                <label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                        autoComplete=\"off\"\r\n                        className={styles.input}\r\n\r\n                    />\r\n                </label>\r\n\r\n                <span className={styles.spanText}>Number</span>\r\n                <label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        onChange={handleChange}\r\n                        autoComplete=\"off\"\r\n                        minLength={5}\r\n                        className={styles.input}\r\n                    />\r\n                </label>\r\n                <button className={styles.btn} type=\"submit\">Add contact</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nContactForm.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ContactForm;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactForm from '../../component/contactForm/contactForm';\r\nimport { addContact } from '../../redux/contactAction';\r\n\r\n\r\nclass ContactFormContainer extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.target;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.addContact({ ...this.state })\r\n        this.props.onAddContactForTransition({ ...this.state })\r\n        this.reset()\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState(\r\n            {\r\n                name: '',\r\n                number: ''\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n\r\n        return (\r\n            <ContactForm name={name} number={number} handleSubmit={this.handleSubmit} handleChange={this.handleChange} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addContact: contact => {\r\n        return dispatch(addContact(contact))\r\n    }\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactFormContainer); ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './elementListContacts.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contactAction';\r\n\r\n\r\nconst ElementListContact = ({ list, deleteContact }) => (\r\n    <li className={styles.list}>{list.name} <span>{list.number}</span>\r\n        <button className={styles.close} type=\"button\" onClick={() => deleteContact(list.id)}></button>\r\n    </li>\r\n)\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    deleteContact: id => dispatch(deleteContact(id))\r\n\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ElementListContact);\r\n\r\n\r\nElementListContact.propTypes = {\r\n    deleteContact: PropTypes.func.isRequired,\r\n    list: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n    }),\r\n}","import React from 'react';\r\nimport ElementListContact from './elementListContact';\r\n\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport forContactList from '../transitions/forContactList.module.css';\r\n\r\n\r\nconst ContactList = ({ filteredContacts }) => {\r\n\r\n    return (\r\n        <>\r\n            <TransitionGroup component=\"ul\">\r\n                {filteredContacts.map(list => (\r\n                    <CSSTransition key={list.id} timeout={250} unmountOnExit classNames={forContactList}>\r\n                        < ElementListContact list={list} />\r\n                    </CSSTransition>\r\n                ))}\r\n            </TransitionGroup>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactList from '../../component/contactList/ContactList ';\r\n\r\n\r\nconst filterContacts = (contacts, filter) => {\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n};\r\n\r\nclass ContactListContainer extends Component {\r\n\r\n    render() {\r\n        const { contacts } = this.props.contacts;\r\n        const { filter } = this.props;\r\n\r\n        const filteredContacts = filterContacts(contacts, filter)\r\n        return (\r\n            <>\r\n                <ContactList filteredContacts={filteredContacts} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contacts,\r\n        filter: state.filter\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ContactListContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './filter.module.css';\r\n\r\nconst Filter = ({ value, onchangeFilter }) => {\r\n\r\n    return (\r\n        <div className={styles.wrap}>\r\n            <span className={styles.text}>Find contacts by name: </span>\r\n            <input\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={onchangeFilter}\r\n                className={styles.input}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onchangeFilter: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Filter;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { filterContact } from '../../redux/contactAction';\r\nimport Filter from '../../component/filter/filter';\r\n\r\n\r\nclass FilterContainer extends Component {\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    onchangeFilter = (e) => {\r\n        this.setState({ value: e.target.value })\r\n        this.props.filterContact(e.target.value)\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.state;\r\n        return (\r\n            <Filter value={value} onchangeFilter={this.onchangeFilter} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    filterContact: filter => dispatch(filterContact(filter))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(FilterContainer);\r\n\r\n","import React from 'react';\r\nimport styles from './alreadyHaveContact.module.css';\r\n\r\nconst AlreadyHaveContact = () => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <p className={styles.text}>Contacts already exists!</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlreadyHaveContact;","import React from 'react';\r\nimport styles from './nothingEntered.module.css';\r\n\r\nconst NothingEntered = () => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <p className={styles.text}>Fields must be filled!</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NothingEntered;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactFormContainer from '../contactFormContainer/ContactFormContainer';\r\nimport ContactListContainer from '../contactListContainer/ContactListContainer';\r\nimport FilterContainer from '../filterContainer/FilterContainer';\r\n\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport styles from './AppContainer.module.css';\r\nimport forTitle from '../../component/transitions/forTitle.module.css';\r\nimport AlreadyHaveContact from '../../component/alreadyHaveContact/AlreadyHaveContact';\r\nimport ForAlready from '../../component/transitions/ForWarnings.module.css';\r\nimport NothingEntered from '../../component/nothingEntered/NothingEntered';\r\nimport ForNothing from '../../component/transitions/ForWarnings.module.css'\r\nimport ForFilter from '../../component/transitions/ForFilter.module.css';\r\n\r\n\r\nclass AppContainer extends Component {\r\n\r\n    state = {\r\n        isOpen: false,\r\n        isAlready: false,\r\n        isNothing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isOpen: true })\r\n    }\r\n\r\n    takeContactWithFormForTransition = contact => {\r\n        const { contacts } = this.props.contacts\r\n        const searchSameName = contacts.map(cont => cont.name).includes(contact.name)\r\n        if (searchSameName) {\r\n            this.setState({ isAlready: true })\r\n            setTimeout(() => {\r\n                this.setState({ isAlready: false });\r\n            }, 2000);\r\n        } else if (contact.name.length === 0) {\r\n            this.setState({ isNothing: true });\r\n            setTimeout(() => {\r\n                this.setState({ isNothing: false });\r\n            }, 2000);\r\n\r\n        }\r\n    };\r\n\r\n    contactsLength = () => {\r\n        const { contacts } = this.props.contacts;\r\n        return contacts.length >= 2;\r\n    }\r\n\r\n    render() {\r\n        const { isOpen, isAlready, isNothing } = this.state;\r\n        const boolForFilter = this.contactsLength()\r\n\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <CSSTransition in={isOpen} timeout={500} unmountOnExit classNames={forTitle}>\r\n                    <h1 className={styles.text}>Phonebook</h1>\r\n                </CSSTransition>\r\n                <CSSTransition in={isAlready} timeout={250} unmountOnExit classNames={ForAlready}>\r\n                    <AlreadyHaveContact />\r\n                </CSSTransition>\r\n                <CSSTransition in={isNothing} timeout={250} unmountOnExit classNames={ForNothing}>\r\n                    <NothingEntered />\r\n                </CSSTransition>\r\n                <ContactFormContainer onAddContactForTransition={this.takeContactWithFormForTransition} />\r\n                <CSSTransition in={boolForFilter} timeout={250} unmountOnExit classNames={ForFilter}>\r\n                    <FilterContainer />\r\n                </CSSTransition>\r\n                <ContactListContainer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contacts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(AppContainer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\nimport AppContainer from './containers/AppContainer/AppContainer';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppContainer />\n    </Provider>,\n    document.getElementById('root'));\n\n"],"sourceRoot":""}